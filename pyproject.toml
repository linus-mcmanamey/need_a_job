[tool.poetry]
name = "job-application-automation"
version = "0.1.0"
description = "Automated job search and application system for Data Engineering roles"
authors = ["Linus McManamey"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.0"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
redis = "^5.0.0"
rq = "^1.15.0"
duckdb = "^0.9.0"
gradio = "^4.7.0"
anthropic = "^0.7.0"
python-docx = "^1.1.0"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
pyyaml = "^6.0.1"
python-dotenv = "^1.0.0"
loguru = "^0.7.2"
httpx = "^0.25.0"
aiofiles = "^23.2.1"
python-multipart = "^0.0.6"

# For duplicate detection
fuzzywuzzy = "^0.18.0"
python-levenshtein = "^0.23.0"
scikit-learn = "^1.3.2"

# For web scraping (V2 - not needed for MVP with MCP)
# playwright = "^1.40.0"
# beautifulsoup4 = "^4.12.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.12.0"
ruff = "^0.1.6"
mypy = "^1.7.0"
ipython = "^8.18.0"

[tool.poetry.scripts]
start-api = "app.api.main:start"
start-worker = "app.workers.cli:start_worker"
start-ui = "app.ui.gradio_app:start"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
    "rq.*",
    "gradio.*",
    "fuzzywuzzy.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=app",
    "--cov-report=html",
    "--cov-report=term-missing",
    "-v",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
